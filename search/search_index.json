{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"laminas-mvc-i18n üá∑üá∫ –†—É—Å—Å–∫–∏–º –≥—Ä–∞–∂–¥–∞–Ω–∞–º –ú—ã, —É—á–∞—Å—Ç–Ω–∏–∫–∏ Laminas, —Ä–æ–¥–∏–ª–∏—Å—å –∏ –∂–∏–≤–µ–º –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∞—Ö. –£ –º–Ω–æ–≥–∏—Ö –∏–∑ –Ω–∞—Å –µ—Å—Ç—å –¥—Ä—É–∑—å—è, —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏ –∏ –∫–æ–ª–ª–µ–≥–∏ –∫–∞–∫ –≤ –†–æ—Å—Å–∏–∏, —Ç–∞–∫ –∏ –≤ –£–∫—Ä–∞–∏–Ω–µ. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∞—Å —Ä–æ–¥–∏–ª–∏—Å—å –≤ –†–æ—Å—Å–∏–∏. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∞—Å –∂–∏–≤—É—Ç –≤ –†–æ—Å—Å–∏–∏. –£ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –±–∞–±—É—à–∫–∏ –∏ –¥–µ–¥—É—à–∫–∏ —Å—Ä–∞–∂–∞–ª–∏—Å—å —Å —Ñ–∞—à–∏—Å—Ç–∞–º–∏ –≤–æ –í—Ç–æ—Ä–æ–π –º–∏—Ä–æ–≤–æ–π –≤–æ–π–Ω–µ. –ó–¥–µ—Å—å –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ–∞—à–∏–∑–º. –£ –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–∞—Å –µ—Å—Ç—å —É–∫—Ä–∞–∏–Ω—Å–∫–∞—è —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏—Ü–∞, –∫–æ—Ç–æ—Ä–∞—è —Å–ø–∞—Å–ª–∞—Å—å –∏–∑ –¥–æ–º–∞ –≤–º–µ—Å—Ç–µ —Å —Å—ã–Ω–æ–º. –ü–æ–µ–∑–¥ –∑–∞–¥–µ—Ä–∂–∞–ª—Å—è –∏–∑-–∑–∞ –±–æ–º–±–µ–∂–∫–∏ –Ω–∞ –¥–æ—Ä–æ–≥–µ –≤–ø–µ—Ä–µ–¥–∏. –£ –Ω–∞—Å –µ—Å—Ç—å –¥—Ä—É–∑—å—è, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä—è—á—É—Ç—Å—è –≤ –±–æ–º–±–æ—É–±–µ–∂–∏—â–∞—Ö. –ú—ã —Å —Ç—Ä–µ–≤–æ–≥–æ–π –∂–¥–µ–º –≤–µ—Å—Ç–æ—á–∫–∏ –æ—Ç –Ω–∏—Ö –ø–æ—Å–ª–µ –≤–æ–∑–¥—É—à–Ω—ã—Ö –Ω–∞–ª–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –±–µ—Å–ø–æ—Ä—è–¥–æ—á–Ω–æ –Ω–∞–Ω–æ—Å—è—Ç —É–¥–∞—Ä—ã –∏ –ø–æ–ø–∞–¥–∞—é—Ç –ø–æ –±–æ–ª—å–Ω–∏—Ü–∞–º, —à–∫–æ–ª–∞–º, –¥–µ—Ç—Å–∫–∏–º —Å–∞–¥–∞–º –∏ –¥–æ–º–∞–º. –ú—ã –Ω–µ –±–µ—Ä–µ–º —ç—Ç–æ –∏–∑ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –°–ú–ò. –ú—ã –Ω–∞–±–ª—é–¥–∞–µ–º —ç—Ç–æ –Ω–∞–ø—Ä—è–º—É—é. –í—ã –¥–æ–≤–µ—Ä—è–µ—Ç–µ –Ω–∞–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —á—Ç–æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã, –∏ –º—ã –ø—Ä–æ—Å–∏–º –≤–∞—Å –¥–æ–≤–µ—Ä–∏—Ç—å—Å—è –Ω–∞–º –≤–Ω–æ–≤—å. –ú—ã –Ω—É–∂–¥–∞–µ–º—Å—è –≤ –ø–æ–º–æ—â–∏. –í—ã—Ö–æ–¥–∏—Ç–µ –∏ –ø—Ä–æ—Ç–µ—Å—Ç—É–π—Ç–µ –ø—Ä–æ—Ç–∏–≤ —ç—Ç–æ–π –±–µ—Å–ø–æ–ª–µ–∑–Ω–æ–π –≤–æ–π–Ω—ã. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫—Ä–æ–≤–æ–ø—Ä–æ–ª–∏—Ç–∏–µ. –°–∫–∞–∂–∏—Ç–µ \"–ù–µ—Ç –≤–æ–π–Ω–µ!\" üá∫üá∏ To Citizens of Russia We at Laminas come from all over the world. Many of us have friends, family and colleagues in both Russia and Ukraine. Some of us were born in Russia. Some of us currently live in Russia. Some have grandparents who fought Nazis in World War II. Nobody here supports fascism. One team member has a Ukrainian relative who fled her home with her son. The train was delayed due to bombing on the road ahead. We have friends who are hiding in bomb shelters. We anxiously follow up on them after the air raids, which indiscriminately fire at hospitals, schools, kindergartens and houses. We're not taking this from any media. These are our actual experiences. You trust us enough to use our software. We ask that you trust us to say the truth on this. We need your help. Go out and protest this unnecessary war. Stop the bloodshed. Say \"stop the war!\" laminas-mvc-i18n provides integration between: laminas-i18n laminas-mvc laminas-router and replaces the i18n functionality found in the v2 releases of the latter two components. File issues at https://github.com/laminas/laminas-mvc-i18n/issues Documentation is at https://docs.laminas.dev/laminas-mvc-i18n/ Installation $ composer require laminas/laminas-mvc-i18n Assuming you are using the component installer , doing so will enable the component in your application, allowing you to immediately start developing console applications via your MVC. If you are not, please read the introduction for details on how to register the functionality with your application. For use with laminas-mvc v3 and up While this component has an initial stable release, please do not use it with laminas-mvc releases prior to v3, as it is not compatible. Migrating from laminas-mvc v2 i18n features to laminas-mvc-i18n Please see the migration guide for details on how to migrate your existing laminas-mvc console functionality to the features exposed by this component.","title":"Home"},{"location":"#laminas-mvc-i18n","text":"","title":"laminas-mvc-i18n"},{"location":"#_1","text":"–ú—ã, —É—á–∞—Å—Ç–Ω–∏–∫–∏ Laminas, —Ä–æ–¥–∏–ª–∏—Å—å –∏ –∂–∏–≤–µ–º –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∞—Ö. –£ –º–Ω–æ–≥–∏—Ö –∏–∑ –Ω–∞—Å –µ—Å—Ç—å –¥—Ä—É–∑—å—è, —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–∏ –∏ –∫–æ–ª–ª–µ–≥–∏ –∫–∞–∫ –≤ –†–æ—Å—Å–∏–∏, —Ç–∞–∫ –∏ –≤ –£–∫—Ä–∞–∏–Ω–µ. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∞—Å —Ä–æ–¥–∏–ª–∏—Å—å –≤ –†–æ—Å—Å–∏–∏. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∞—Å –∂–∏–≤—É—Ç –≤ –†–æ—Å—Å–∏–∏. –£ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –±–∞–±—É—à–∫–∏ –∏ –¥–µ–¥—É—à–∫–∏ —Å—Ä–∞–∂–∞–ª–∏—Å—å —Å —Ñ–∞—à–∏—Å—Ç–∞–º–∏ –≤–æ –í—Ç–æ—Ä–æ–π –º–∏—Ä–æ–≤–æ–π –≤–æ–π–Ω–µ. –ó–¥–µ—Å—å –Ω–∏–∫—Ç–æ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ñ–∞—à–∏–∑–º. –£ –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–∞—Å –µ—Å—Ç—å —É–∫—Ä–∞–∏–Ω—Å–∫–∞—è —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏—Ü–∞, –∫–æ—Ç–æ—Ä–∞—è —Å–ø–∞—Å–ª–∞—Å—å –∏–∑ –¥–æ–º–∞ –≤–º–µ—Å—Ç–µ —Å —Å—ã–Ω–æ–º. –ü–æ–µ–∑–¥ –∑–∞–¥–µ—Ä–∂–∞–ª—Å—è –∏–∑-–∑–∞ –±–æ–º–±–µ–∂–∫–∏ –Ω–∞ –¥–æ—Ä–æ–≥–µ –≤–ø–µ—Ä–µ–¥–∏. –£ –Ω–∞—Å –µ—Å—Ç—å –¥—Ä—É–∑—å—è, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä—è—á—É—Ç—Å—è –≤ –±–æ–º–±–æ—É–±–µ–∂–∏—â–∞—Ö. –ú—ã —Å —Ç—Ä–µ–≤–æ–≥–æ–π –∂–¥–µ–º –≤–µ—Å—Ç–æ—á–∫–∏ –æ—Ç –Ω–∏—Ö –ø–æ—Å–ª–µ –≤–æ–∑–¥—É—à–Ω—ã—Ö –Ω–∞–ª–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –±–µ—Å–ø–æ—Ä—è–¥–æ—á–Ω–æ –Ω–∞–Ω–æ—Å—è—Ç —É–¥–∞—Ä—ã –∏ –ø–æ–ø–∞–¥–∞—é—Ç –ø–æ –±–æ–ª—å–Ω–∏—Ü–∞–º, —à–∫–æ–ª–∞–º, –¥–µ—Ç—Å–∫–∏–º —Å–∞–¥–∞–º –∏ –¥–æ–º–∞–º. –ú—ã –Ω–µ –±–µ—Ä–µ–º —ç—Ç–æ –∏–∑ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –°–ú–ò. –ú—ã –Ω–∞–±–ª—é–¥–∞–µ–º —ç—Ç–æ –Ω–∞–ø—Ä—è–º—É—é. –í—ã –¥–æ–≤–µ—Ä—è–µ—Ç–µ –Ω–∞–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —á—Ç–æ–± –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã, –∏ –º—ã –ø—Ä–æ—Å–∏–º –≤–∞—Å –¥–æ–≤–µ—Ä–∏—Ç—å—Å—è –Ω–∞–º –≤–Ω–æ–≤—å. –ú—ã –Ω—É–∂–¥–∞–µ–º—Å—è –≤ –ø–æ–º–æ—â–∏. –í—ã—Ö–æ–¥–∏—Ç–µ –∏ –ø—Ä–æ—Ç–µ—Å—Ç—É–π—Ç–µ –ø—Ä–æ—Ç–∏–≤ —ç—Ç–æ–π –±–µ—Å–ø–æ–ª–µ–∑–Ω–æ–π –≤–æ–π–Ω—ã. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫—Ä–æ–≤–æ–ø—Ä–æ–ª–∏—Ç–∏–µ. –°–∫–∞–∂–∏—Ç–µ \"–ù–µ—Ç –≤–æ–π–Ω–µ!\"","title":"üá∑üá∫ –†—É—Å—Å–∫–∏–º –≥—Ä–∞–∂–¥–∞–Ω–∞–º"},{"location":"#to-citizens-of-russia","text":"We at Laminas come from all over the world. Many of us have friends, family and colleagues in both Russia and Ukraine. Some of us were born in Russia. Some of us currently live in Russia. Some have grandparents who fought Nazis in World War II. Nobody here supports fascism. One team member has a Ukrainian relative who fled her home with her son. The train was delayed due to bombing on the road ahead. We have friends who are hiding in bomb shelters. We anxiously follow up on them after the air raids, which indiscriminately fire at hospitals, schools, kindergartens and houses. We're not taking this from any media. These are our actual experiences. You trust us enough to use our software. We ask that you trust us to say the truth on this. We need your help. Go out and protest this unnecessary war. Stop the bloodshed. Say \"stop the war!\" laminas-mvc-i18n provides integration between: laminas-i18n laminas-mvc laminas-router and replaces the i18n functionality found in the v2 releases of the latter two components. File issues at https://github.com/laminas/laminas-mvc-i18n/issues Documentation is at https://docs.laminas.dev/laminas-mvc-i18n/","title":"üá∫üá∏ To Citizens of Russia"},{"location":"#installation","text":"$ composer require laminas/laminas-mvc-i18n Assuming you are using the component installer , doing so will enable the component in your application, allowing you to immediately start developing console applications via your MVC. If you are not, please read the introduction for details on how to register the functionality with your application.","title":"Installation"},{"location":"#for-use-with-laminas-mvc-v3-and-up","text":"While this component has an initial stable release, please do not use it with laminas-mvc releases prior to v3, as it is not compatible.","title":"For use with laminas-mvc v3 and up"},{"location":"#migrating-from-laminas-mvc-v2-i18n-features-to-laminas-mvc-i18n","text":"Please see the migration guide for details on how to migrate your existing laminas-mvc console functionality to the features exposed by this component.","title":"Migrating from laminas-mvc v2 i18n features to laminas-mvc-i18n"},{"location":"intro/","text":"Introduction Laminas offered functionality for integrating internationalization capabilities provided by laminas-i18n into MVC applications. This support includes: registration of an MvcTranslator service by default. a DummyTranslator , for use when ext/intl is unavailable, or configuration dictates that translations are disabled. an MvcTranslator , which implements both Laminas\\I18n\\Translator\\TranslatorInterface and Laminas\\Validator\\TranslatorInterface , which decorates a Laminas\\I18n\\Translator\\TranslatorInterface instance. a TranslatorAwareTreeRouteStack , for enabling internationalized routing segments. Since this functionality is entirely opt-in, we have decided that for version 3 of laminas-mvc, we will offer it as a standalone package, to install when required for your applications. Additionally, because it bridges multiple TranslatorInterface implementations, and provides i18n-capable routing, it can be useful with non-laminas-mvc applications such as mezzio . Installation Basic installation is via composer: $ composer require laminas/laminas-mvc-i18n Assuming you are using the component installer , doing so will automatically enable the component in your application. If you are not using the component installer, you will need to add the entry: 'Laminas\\Mvc\\I18n' to your list of active modules. This is usually provided in one of the following files: config/application.config.php (vanilla Laminas skeleton application) config/modules.config.php (Laminas API Tools application) Manually enabling with mezzio If you are not using the component-installer with mezzio, you will need to add the entry: \\Laminas\\Mvc\\I18n\\ConfigProvider::class to your config/config.php class, assuming you are already using laminas-config-aggregator . If you are not, add a new global config/autoload/ file with the following contents: &lt;?php use Laminas\\Mvc\\I18n\\ConfigProvider; $provider = new ConfigProvider(); return $provider(); Migration In order to separate the i18n integration features from laminas-mvc, we made a few minor changes. While most of these are under-the-hood implementation details, please read the migration guide to verify your application will continue to work.","title":"Introduction"},{"location":"intro/#introduction","text":"Laminas offered functionality for integrating internationalization capabilities provided by laminas-i18n into MVC applications. This support includes: registration of an MvcTranslator service by default. a DummyTranslator , for use when ext/intl is unavailable, or configuration dictates that translations are disabled. an MvcTranslator , which implements both Laminas\\I18n\\Translator\\TranslatorInterface and Laminas\\Validator\\TranslatorInterface , which decorates a Laminas\\I18n\\Translator\\TranslatorInterface instance. a TranslatorAwareTreeRouteStack , for enabling internationalized routing segments. Since this functionality is entirely opt-in, we have decided that for version 3 of laminas-mvc, we will offer it as a standalone package, to install when required for your applications. Additionally, because it bridges multiple TranslatorInterface implementations, and provides i18n-capable routing, it can be useful with non-laminas-mvc applications such as mezzio .","title":"Introduction"},{"location":"intro/#installation","text":"Basic installation is via composer: $ composer require laminas/laminas-mvc-i18n Assuming you are using the component installer , doing so will automatically enable the component in your application. If you are not using the component installer, you will need to add the entry: 'Laminas\\Mvc\\I18n' to your list of active modules. This is usually provided in one of the following files: config/application.config.php (vanilla Laminas skeleton application) config/modules.config.php (Laminas API Tools application)","title":"Installation"},{"location":"intro/#migration","text":"In order to separate the i18n integration features from laminas-mvc, we made a few minor changes. While most of these are under-the-hood implementation details, please read the migration guide to verify your application will continue to work.","title":"Migration"},{"location":"routing/","text":"Routing laminas-router provides routing capabilities for laminas-mvc . In version 2, these capabilities also included an opt-in feature of translatable route segments. Laminas\\Router\\Http\\Segment has built-in facilities for translatable route segments, but this functionality is disabled by default. To enable it, a translator must be present in the options provided when matching; such options are typically passed by the route stack invoking the segment. laminas-mvc-i18n provides Laminas\\Mvc\\I18n\\Router\\TranslatorAwareTreeRouteStack to do exactly that. If it is injected with a translator, it will pass the translator on to each segment when invoking match() . Enabling TranslatorAwareTreeRouteStack To enable the TranslatorAwareTreeRouteStack in your application, you will need to add configuration that tells laminas-mvc to use it instead of the default router. Additionally, you may want to indicate the translation locale and/or text domain to use for translatable route segments. The following is a configuration example that could be specified in a module or at the application level: use Laminas\\Mvc\\I18n\\Router\\TranslatorAwareTreeRouteStack; return [ 'router' =&gt; [ 'router_class' =&gt; TranslatorAwareTreeRouteStack::class, 'translator_text_domain' =&gt; 'routing', ], ]; The above would configure and return a TranslatorAwareTreeRouteStack instance when the router is requested. The instance would be configured to use the routing text domain, and injected with either the MvcTranslator or Laminas\\I18n\\Translator\\TranslatorInterface service (whichever is present, with the former having precedence). The translator_text_domain , when not present, defaults to default . Translatable route segments As a refresher, segment routes allow you to define a combination of literal characters and placeholders; placeholders are denoted by :name notation within the definition. To create a translatable segment, you use an alternate notation, {translation-key} . When matching, the translator uses its locale and the text domain configured to translate translation keys in the route definition prior to attempting a match. As an example, consider the following route definition: /{shopping_cart}/{products}/:productId The above defines two translatable segments, shopping_cart and products . When attempting to match, these keys are passed to the translator. If, for example, the locale evaluates to de-DE , these might become einkaufswagen and 'produkte`, respectively, evaluating to: /einkaufswagen/produkte/:productId This will then be what the router attempts to match against.","title":"Routing"},{"location":"routing/#routing","text":"laminas-router provides routing capabilities for laminas-mvc . In version 2, these capabilities also included an opt-in feature of translatable route segments. Laminas\\Router\\Http\\Segment has built-in facilities for translatable route segments, but this functionality is disabled by default. To enable it, a translator must be present in the options provided when matching; such options are typically passed by the route stack invoking the segment. laminas-mvc-i18n provides Laminas\\Mvc\\I18n\\Router\\TranslatorAwareTreeRouteStack to do exactly that. If it is injected with a translator, it will pass the translator on to each segment when invoking match() .","title":"Routing"},{"location":"routing/#enabling-translatorawaretreeroutestack","text":"To enable the TranslatorAwareTreeRouteStack in your application, you will need to add configuration that tells laminas-mvc to use it instead of the default router. Additionally, you may want to indicate the translation locale and/or text domain to use for translatable route segments. The following is a configuration example that could be specified in a module or at the application level: use Laminas\\Mvc\\I18n\\Router\\TranslatorAwareTreeRouteStack; return [ 'router' =&gt; [ 'router_class' =&gt; TranslatorAwareTreeRouteStack::class, 'translator_text_domain' =&gt; 'routing', ], ]; The above would configure and return a TranslatorAwareTreeRouteStack instance when the router is requested. The instance would be configured to use the routing text domain, and injected with either the MvcTranslator or Laminas\\I18n\\Translator\\TranslatorInterface service (whichever is present, with the former having precedence). The translator_text_domain , when not present, defaults to default .","title":"Enabling TranslatorAwareTreeRouteStack"},{"location":"routing/#translatable-route-segments","text":"As a refresher, segment routes allow you to define a combination of literal characters and placeholders; placeholders are denoted by :name notation within the definition. To create a translatable segment, you use an alternate notation, {translation-key} . When matching, the translator uses its locale and the text domain configured to translate translation keys in the route definition prior to attempting a match. As an example, consider the following route definition: /{shopping_cart}/{products}/:productId The above defines two translatable segments, shopping_cart and products . When attempting to match, these keys are passed to the translator. If, for example, the locale evaluates to de-DE , these might become einkaufswagen and 'produkte`, respectively, evaluating to: /einkaufswagen/produkte/:productId This will then be what the router attempts to match against.","title":"Translatable route segments"},{"location":"services/","text":"Services Defined laminas-mvc-i18n defines the following services and related factories. Translator Laminas\\Mvc\\I18n\\Translator implements each of Laminas\\I18n\\Translator\\TranslatorInterface (from laminas-i18n) and implements Laminas\\Validator\\TranslatorInterface (from laminas-validator), by decorating an Laminas\\I18n\\Translator\\TranslatorInterface instance (typically a Laminas\\I18n\\Translator\\Translator instance). It exists to allow bridging multiple translation interfaces, allowing it to be used in multiple contexts. DummyTranslator Laminas\\Mvc\\I18n\\DummyTranslator is an implementation of Laminas\\I18n\\Translator\\TranslatorInterface that essentially returns the arguments provided to it unchanged. As an example, calling: $translator-&gt;translate($message); will return $message , and $translator-&gt;translatePlural($singular, $plural, $number); will return $singular when $number is 1 , and $plural otherwise. MvcTranslator and TranslatorFactory The component defines the MvcTranslator service, which is aliased to the Laminas\\Mvc\\I18n\\Translator class, and uses Laminas\\Mvc\\I18n\\TranslatorFactory to create and return the instance. The point of the service is to ensure that a Laminas\\Mvc\\I18n\\Translator instance is returned, which enables usage across multiple contexts (see the Translator section , above). As such, you should typically use the MvcTranslator service when injecting your own classes with a translator instance: function ($container) { return new YourServiceClass($container-&gt;get('MvcTranslator')); } The TranslatorFactory will do the following: If a Laminas\\I18n\\Translator\\TranslatorInterface service is registered, it will be retrieved and decorated with a Laminas\\Mvc\\I18n\\Translator instance. If the \"config\" service is defined in the container, has a \"translator\" key, but the value of that key is boolean false, it returns a Laminas\\Mvc\\I18n\\Translator instance wrapping a DummyTranslator instance. If the \"config\" service is defined in the container, has a \"translator\" key, and value is an array or Traversable set of configuration, it passes that to Laminas\\I18n\\Translator\\Translator::factory() to create and return an instance. That instance is then decorated with a Laminas\\Mvc\\I18n\\Translator . HttpRouterDelegatorFactory The component registers a delegator factory on each of the HttpRouter and Laminas\\Router\\Http\\TreeRouteStack services. The delegator factory checks to see if the instance created is a Laminas\\Mvc\\I18n\\Router\\TranslatorAwareTreeRouteStack , and, if so: if the MvcTranslator service is present, it will inject it as the translator before returning it. if the Laminas\\I18n\\Translator\\TranslatorInterface service is present, it will inject it as the translator before returning it. otherwise, it disables translation in the returned instance.","title":"Default Services"},{"location":"services/#services-defined","text":"laminas-mvc-i18n defines the following services and related factories.","title":"Services Defined"},{"location":"services/#translator","text":"Laminas\\Mvc\\I18n\\Translator implements each of Laminas\\I18n\\Translator\\TranslatorInterface (from laminas-i18n) and implements Laminas\\Validator\\TranslatorInterface (from laminas-validator), by decorating an Laminas\\I18n\\Translator\\TranslatorInterface instance (typically a Laminas\\I18n\\Translator\\Translator instance). It exists to allow bridging multiple translation interfaces, allowing it to be used in multiple contexts.","title":"Translator"},{"location":"services/#dummytranslator","text":"Laminas\\Mvc\\I18n\\DummyTranslator is an implementation of Laminas\\I18n\\Translator\\TranslatorInterface that essentially returns the arguments provided to it unchanged. As an example, calling: $translator-&gt;translate($message); will return $message , and $translator-&gt;translatePlural($singular, $plural, $number); will return $singular when $number is 1 , and $plural otherwise.","title":"DummyTranslator"},{"location":"services/#mvctranslator-and-translatorfactory","text":"The component defines the MvcTranslator service, which is aliased to the Laminas\\Mvc\\I18n\\Translator class, and uses Laminas\\Mvc\\I18n\\TranslatorFactory to create and return the instance. The point of the service is to ensure that a Laminas\\Mvc\\I18n\\Translator instance is returned, which enables usage across multiple contexts (see the Translator section , above). As such, you should typically use the MvcTranslator service when injecting your own classes with a translator instance: function ($container) { return new YourServiceClass($container-&gt;get('MvcTranslator')); } The TranslatorFactory will do the following: If a Laminas\\I18n\\Translator\\TranslatorInterface service is registered, it will be retrieved and decorated with a Laminas\\Mvc\\I18n\\Translator instance. If the \"config\" service is defined in the container, has a \"translator\" key, but the value of that key is boolean false, it returns a Laminas\\Mvc\\I18n\\Translator instance wrapping a DummyTranslator instance. If the \"config\" service is defined in the container, has a \"translator\" key, and value is an array or Traversable set of configuration, it passes that to Laminas\\I18n\\Translator\\Translator::factory() to create and return an instance. That instance is then decorated with a Laminas\\Mvc\\I18n\\Translator .","title":"MvcTranslator and TranslatorFactory"},{"location":"services/#httprouterdelegatorfactory","text":"The component registers a delegator factory on each of the HttpRouter and Laminas\\Router\\Http\\TreeRouteStack services. The delegator factory checks to see if the instance created is a Laminas\\Mvc\\I18n\\Router\\TranslatorAwareTreeRouteStack , and, if so: if the MvcTranslator service is present, it will inject it as the translator before returning it. if the Laminas\\I18n\\Translator\\TranslatorInterface service is present, it will inject it as the translator before returning it. otherwise, it disables translation in the returned instance.","title":"HttpRouterDelegatorFactory"},{"location":"migration/v2-to-v3/","text":"Migration: laminas-mvc v2 to laminas-mvc-i18n laminas-mvc-i18n ports all i18n integration functionality from the laminas-mvc v2 release to a single component. As such, a number of classes were renamed that could potentially impact end-users. TranslatorAwareTreeRouteStack Laminas\\Mvc\\Router\\Http\\TranslatorAwareTreeRouteStack was renamed to Laminas\\Mvc\\I18n\\Router\\TranslatorAwareTreeRouteStack . It functions exactly as the original, however, including accepting the same configuration. TranslatorServiceFactory Laminas\\Mvc\\Service\\TranslatorServiceFactory was renamed to Laminas\\Mvc\\I18n\\TranslatorFactory . Behavior remains the same. Exceptions thrown by the MVC translator In v2 releases, Laminas\\Mvc\\I18n\\Translator would throw exceptions from the Laminas\\Mvc\\Exception namespace. It now throws exceptions from the new Laminas\\Mvc\\I18n\\Exception namespace.","title":"Version 2 to Version 3"},{"location":"migration/v2-to-v3/#migration-laminas-mvc-v2-to-laminas-mvc-i18n","text":"laminas-mvc-i18n ports all i18n integration functionality from the laminas-mvc v2 release to a single component. As such, a number of classes were renamed that could potentially impact end-users.","title":"Migration: laminas-mvc v2 to laminas-mvc-i18n"},{"location":"migration/v2-to-v3/#translatorawaretreeroutestack","text":"Laminas\\Mvc\\Router\\Http\\TranslatorAwareTreeRouteStack was renamed to Laminas\\Mvc\\I18n\\Router\\TranslatorAwareTreeRouteStack . It functions exactly as the original, however, including accepting the same configuration.","title":"TranslatorAwareTreeRouteStack"},{"location":"migration/v2-to-v3/#translatorservicefactory","text":"Laminas\\Mvc\\Service\\TranslatorServiceFactory was renamed to Laminas\\Mvc\\I18n\\TranslatorFactory . Behavior remains the same.","title":"TranslatorServiceFactory"},{"location":"migration/v2-to-v3/#exceptions-thrown-by-the-mvc-translator","text":"In v2 releases, Laminas\\Mvc\\I18n\\Translator would throw exceptions from the Laminas\\Mvc\\Exception namespace. It now throws exceptions from the new Laminas\\Mvc\\I18n\\Exception namespace.","title":"Exceptions thrown by the MVC translator"}]}